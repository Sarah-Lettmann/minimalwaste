/********************
Breakpoints
********************/
@mixin breakpoint($size) {
  @if $size == xsmall {
    @media (max-width: $breakpoint-xsmall) { @content; }
  }
  @else if $size == small {
    @media (max-width: $breakpoint-small) { @content; }
  }
  @else if $size == medium {
    @media (min-width: $breakpoint-small + 1) and (max-width: $breakpoint-medium) { @content; }
  }
  @else if $size == mediumAndDown {
    @media (max-width: $breakpoint-medium) { @content; }
  }
  @else if $size == mediumAndLarge {
    @media (min-width: $breakpoint-small + 1) { @content; }
  }
  @else if $size == largeAndUp {
    @media (min-width: $breakpoint-large + 1) { @content; }
  }
}
// @include breakpoint(breakpointname) { ... }



/********************
Fonts
********************/
@mixin latoFont {
  font-family: 'Lato', Verdana, sans-serif;
}

@mixin mainFont {
  font-family: 'Lora', Georgia, serif;
}



/********************
Apply attention in one go
********************/
@mixin attention() {
  &:hover,
  &:active {
    @content;
  }
}
// @include attention() { text-decoration: underline; }



/********************
Transitions
********************/
@mixin transition($property) {
  -webkit-transition: $property $transition-duration linear;
  -moz-transition: $property $transition-duration linear;
  -ms-transition: $property $transition-duration linear;
  -o-transition: $property $transition-duration linear;
  transition: $property $transition-duration linear;
}
// @include transition(color);

@mixin transition-custom($property, $duration, $timing, $delay) {
  -webkit-transition: $property $duration $timing $delay;
  -moz-transition: $property $duration $timing $delay;
  -ms-transition: $property $duration $timing $delay;
  -o-transition: $property $duration $timing $delay;
  transition: $property $duration $timing $delay;
}
// @include transition-custom(color 1s linear 0.5s);



/********************
Box-Shadow
********************/
@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $spread $color;
    -moz-box-shadow:inset $top $left $blur $spread $color;
    box-shadow:inset $top $left $blur $spread $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $spread $color;
    -moz-box-shadow: $top $left $blur $spread $color;
    box-shadow: $top $left $blur $spread $color;
  }
}
// @include box-shadow(0px, 0px, 20px, 0px, #ddd, false);
@mixin box-shadow-standard() {
  @include box-shadow(0, -0.4em, 0, 0, $main-color-light, true);
}

@mixin box-shadow-standard-full() {
  @include box-shadow(0, -1.2em, 0, 0, $main-color-light, true);
}

@mixin box-shadow-buttons-menu() {
  @include box-shadow(0, 5px, 10px, -2px, $second-color, false);
}


/********************
Keyframe Animation
********************/
@mixin keyframe ($animation_name) {
  @-webkit-keyframes #{$animation_name} {
    @content;
  }

  @-moz-keyframes #{$animation_name} {
    @content;
  }

  @keyframes #{$animation_name} {
    @content;
  }
}

@mixin animation ($animation, $delay, $duration, $timing, $count) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-timing-function: $timing;
  -webkit-animation-iteration-count: $count;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-timing-function: $timing;
  -moz-animation-iteration-count: $count;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-timing-function: $timing;
  animation-iteration-count: $count;
}


/********************
transforms
********************/
@mixin skew($deg) {
  -ms-transform: skewY($deg);
  -webkit-transform: skewY($deg);
  transform: skewY($deg);
}

@mixin rotate($deg) {
  -ms-transform: rotate($deg);
  -webkit-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin translate2D($x, $y) {
  -ms-transform: translate($x, $y);
  -webkit-transform: translate($x, $y);
  transform: translate($x, $y);
}


/********************
green Border
********************/
@mixin greenBorder($topOrBottom) {
  content: '';
  display: block;
  width: 100%;
  height: 1rem;
  @if $topOrBottom == top {
    border-top: 0.5rem solid $main-color;
    border-bottom: 0.15rem solid $main-color-light;
  }
  @else if $topOrBottom == bottom {
    border-top: 0.15rem solid $main-color-light;
    border-bottom: 0.5rem solid $main-color;
  }
  @include skew(-1deg);
}
